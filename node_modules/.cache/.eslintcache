[{"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\index.js":"1","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\App.js":"2","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\ProductList.js":"3","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\AddProduct.js":"4","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\EditProduct.js":"5","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\Navbar.js":"6","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\Home.js":"7","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\About.js":"8"},{"size":262,"mtime":1684915735542,"results":"9","hashOfConfig":"10"},{"size":729,"mtime":1685123495708,"results":"11","hashOfConfig":"10"},{"size":1888,"mtime":1684941037896,"results":"12","hashOfConfig":"10"},{"size":2892,"mtime":1684927763357,"results":"13","hashOfConfig":"10"},{"size":3275,"mtime":1684941045295,"results":"14","hashOfConfig":"10"},{"size":397,"mtime":1685278543788,"results":"15","hashOfConfig":"10"},{"size":251,"mtime":1685276681582,"results":"16","hashOfConfig":"10"},{"size":492,"mtime":1685276678151,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1flj3qj",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\index.js",[],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\App.js",[],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\ProductList.js",["43","44"],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\AddProduct.js",["45"],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\EditProduct.js",["46","47"],[],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst EditProduct = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [preview, setPreview] = useState(\"\");\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getProductById();\r\n    },[]);\r\n\r\n    const getProductById = async () =>{\r\n        const response = await axios.get(`http://localhost:5000/products/${id}`);\r\n        setTitle(response.data.name);\r\n        setFile(response.data.image);\r\n        setPreview(response.data.url);\r\n    }\r\n\r\n    const loadImage = (e) => {\r\n        const image = e.target.files[0];\r\n        setFile(image);\r\n        setPreview(URL.createObjectURL(image));\r\n    };\r\n\r\n    const updateProduct = async(e) =>{\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"title\", title);\r\n        try {\r\n            await axios.patch(`http://localhost:5000/products/${id}`, formData, {\r\n                headers:{\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n            }); \r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"columns is-centered mt-5\">\r\n        <div className=\"column is-half\">\r\n            <form onSubmit={updateProduct}>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Product Name</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        type=\"text\" \r\n                        className=\"input\" \r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        placeholder='Product Name'\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Image</label>\r\n                    <div className=\"control\">\r\n                        <div className=\"file\">\r\n                            <label className=\"file-label\">\r\n                                <input type=\"file\" className='file-input' onChange={loadImage} />\r\n                                <span className='file-cta'>\r\n                                    <span className='file-label'>Choose a file...</span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {preview ? (\r\n                    <figure className='image is-128x128'>\r\n                        <img src={preview} alt=\"Preview Image\" />\r\n                    </figure>\r\n                ): (\r\n                    \"\"\r\n                )}\r\n\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        <button typr=\"submit\" className=\"button is-success\">Update</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProduct\r\n","C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\Navbar.js",[],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\Home.js",[],[],"C:\\Users\\Acer\\PRAKTIKUM TEKWEB\\PROYEK\\frontend\\src\\components\\About.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":35,"column":19,"nodeType":"50","endLine":35,"endColumn":56},{"ruleId":"51","severity":1,"message":"52","line":48,"column":17,"nodeType":"50","endLine":48,"endColumn":90},{"ruleId":"48","severity":1,"message":"49","line":67,"column":25,"nodeType":"50","endLine":67,"endColumn":66},{"ruleId":"53","severity":1,"message":"54","line":14,"column":7,"nodeType":"55","endLine":14,"endColumn":9,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"49","line":79,"column":25,"nodeType":"50","endLine":79,"endColumn":66},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductById'. Either include it or remove the dependency array.","ArrayExpression",["57"],{"desc":"58","fix":"59"},"Update the dependencies array to be: [getProductById]",{"range":"60","text":"61"},[432,434],"[getProductById]"]